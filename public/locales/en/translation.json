{
  "navbar": {
    "home": "Home",
    "about": "About",
    "projects": "Projects",
    "contact": "Contact",
    "menu": "Menu",
    "settings": "Settings",
    "theme": "Theme",
    "language": "Language",
    "descriptions": {
      "home": "Always building, always learning, Welcome!",
      "about": "Learn more about me!",
      "projects": "See what I’ve built",
      "contact": "Get in touch with me",
      "settings": "Change theme and language"
    }
  },
  "name": "Hey, I'm Tahmine",
  "intro": "a front-end developer focused on building scalable and maintainable web interfaces. I mostly work with React and Next.js, and I care deeply about clean architecture, performance, and a good developer experience. My goal is to bridge design and engineering by crafting UI that’s both intuitive and technically sound.",
  "projects": "Projects",
  "aboutButton": "More About me",
  "about": {
    "title": "About Me",
    "description": "An overview of the key stages in my personal growth and professional development.",
    "childhood": {
      "title": "Childhood",
      "paragraph": "My childhood was full of simple games and a quiet curiosity. I used to love puzzles—not just for fun, but because I wanted to understand how things fit together. I spent a lot of time playing with my cousins, creating our own little worlds. My dad encouraged me with small, confident words. My mom was always gently present, paying attention in ways I didn’t fully realize at the time. Looking back, I see how much of who I am was quietly built during those years."
    },
    "adolescence": {
      "title": "Adolescence",
      "paragraph": "In my teens, I spent most of my time reading books and watching films. Real life often felt distant, but stories made sense to me. I was the kind of kid who thought a lot, asked quiet questions. School wasn’t just about grades—I saw it as a way to figure out who I was and how the world worked. I might’ve seemed quiet on the outside, but inside, my thoughts were always moving."
    },
    "university": {
      "title": "University",
      "paragraph": "University brought a turn I didn’t expect. I never planned to go into programming—had no background, no big goal. But somehow, that’s where I ended up. I started from scratch and slowly found my way. I became one of the top students, not just because of grades, but because I really wanted to understand. Most of what I learned came from outside the classroom—from trying, failing, figuring things out on my own."
    },
    "now": {
      "title": "Now",
      "paragraph": "Now, I work as a developer. Every day brings new problems to solve, and I’m still learning. It’s not always easy—some days are exhausting—but the feeling of progress and growth is something I really value. When I look back at how it all unfolded, I realize nothing was random. Every step, even the uncertain ones, helped shape who I’ve become."
    }
  },
  "skills": {
    "title": "Skills and Tools",
    "description": "Some of the languages, tools, and concepts I have experience with.",
    "frameworks": "Frameworks & Libraries",
    "ui": "UI & Styling",
    "languages": "Languages",
    "other": "Other",
    "and": "&"
  },
  "snapshot": {
    "title": "Projects Snapshot",
    "description": "Some of the side projects I've been working on in the last few months."
  },
  "Testimonials": {
    "title": "Some good words",
    "description": "Some feedback from the people I've had the privilege of working with.",
    "alza": {
      "name": "Alireza Arhane",
      "role": "Fullstack Engineer & AI Specialist",
      "company": "SiliconTech Knowledge-Based Tech Co.",
      "testimonial": "Tahmine is not only a great frontend engineer but an even better friend. She brings a unique mix of technical expertise and a warm, approachable personality that makes working with her a joy. Her deep knowledge of the JavaScript ecosystem—especially React, Next.js, and Tailwind CSS—constantly impresses me. She also has a sharp eye for design and works seamlessly with tools like Figma, bridging the gap between design and development effortlessly."
    },
    "arshia": {
      "name": "Arshia Khozeimeh",
      "role": "Backend Developer | Customer Success Specialist at ",
      "company": "Zenphi, Inc.",
      "testimonial": "Tahmine is one of the most impressive colleagues I’ve ever worked with. She brings passion to every project, embraces challenges, and is always eager to explore new frameworks and technologies. Whenever a difficult or overlooked project came up—ones others often avoided—Tahmine was the first to step in, driven by a desire to learn and grow. She is truly intrinsically motivated by her goals and values, and she stays focused regardless of external pressures or distractions. From a technical perspective, Tahmine consistently writes clean, well-structured code. Her teammates were always glad to see her name on a project, knowing they’d be working with code that’s easy to understand and build upon."
    }
  },
  "footer": {
    "slogan": "May your code be bug-free and your coffee always warm ☕",
    "footerNote": "Designed & developed with calm tea and curious code"
  },
  "Projects": {
    "title": "Curated Projects",
    "description": "Here are some of my recent projects that showcase my skills and interests.",
    "titles": {
      "description": "Short Explanation",
      "tools": "Tech Stack Used",
      "goals": "Project Goals",
      "features": "Features",
      "chalenges": "Challenges & Solutions",
      "lessons": "Lessons Learned",
      "demo": "Demo & Screenshots",
      "demo2": "Live Demo",
      "view": "View Project",
      "live": "Open Live Site",
      "repository": "Repository"
    },
    "first": {
      "name": "HesamSanat Design System",
      "summary": "A web application to showcase and customize Hesam Sanat’s products in 3D with environment previews and component selection.",
      "description": "“HesamSanat Design System” is an interactive and advanced web platform that allows users to explore, design, and customize urban lighting products from Hesam Sanat in full 3D. Users can mix and match different components such as lamp heads, poles, and bases, apply custom colors, and visualize their final product in realistic outdoor environments like parks, streets, and sidewalks. The project’s main goal was to enhance the visual presentation of products and provide a unique interactive experience for customers and architects.",
      "tools": "Three.js, Vanilla JS, Tailwind, React.js",
      "goals": {
        "1": "Interactive 3D display of products",
        "2": "Allow users to build and customize their own products",
        "3": "Visualize products in real-world environments (park, street, sidewalk)",
        "4": "Provide admin tools for product and user management"
      },
      "features": {
        "1": "Design and customize lighting products by combining parts and colors",
        "2": "View products in realistic 3D scenes with different lighting and positions",
        "3": "Add products to favorites",
        "4": "Submit orders for customized products",
        "5": "Admin panel for managing products, orders, and users",
        "6": "Fully responsive and multilingual website"
      },
      "chalenges": {
        "chalenge1": "Large 3D model sizes and performance optimization",
        "solution1": "Used Draco compression to reduce file sizes for faster loading and smooth performance.",
        "chalenge2": "Precise placement of parts in 3D space",
        "solution2": "Used dynamic calculation of bounding boxes and object heights in Three.js to stack parts correctly.",
        "chalenge3": "Material-specific color changes",
        "solution3": "Identified mesh parts using isMesh to apply color changes only to the correct materials.",
        "chalenge4": "Rendering in multiple environments with realistic textures and lighting",
        "solution4": "Adjusted camera position, lighting, and model placement differently for each environment (park, street, sidewalk) to ensure realistic previews."
      },
      "lessons": {
        "1": "Advanced Three.js techniques and working with glTF/GLB models",
        "2": "3D model optimization with Draco compression for better performance",
        "3": "Scene lighting, camera control, and object positioning in Three.js",
        "4": "Building user-friendly 3D configurators that allow intuitive product customization"
      }
    },
    "second": {
      "name": "Hesam Sanat Shargh",
      "summary": "A multilingual website for introducing and selling Hesam Sanat factory's products, including park and street lights and urban furniture — designed with SEO focus and dual themes.",
      "description": "A multilingual website for showcasing and selling Hesam Sanat factory’s products such as park lights, street lights, and urban furniture. The website focuses on SEO, features modern UI, light and dark themes, project map integration, online PDF viewer, and a lightweight admin panel.",
      "tools": "Next.js, TypeScript, Tailwind, Shadcn/UI, CMS (TinyMCE), Motion",
      "goals": {
        "1": "Enhance SEO using server-side rendering for product and blog pages",
        "2": "Create a smooth multilingual experience for international users",
        "3": "Design a lightweight admin panel for easy content editing by the factory team",
        "4": "Display completed projects on an interactive map with project details",
        "5": "Deliver an engaging user experience using animations and interactions"
      },
      "features": {
        "1": "Supports 5 languages: Persian, Arabic, Urdu, English, and Turkish",
        "2": "Light and dark themes with manual switch",
        "3": "Advanced product filtering by category, price, and application type",
        "4": "Interactive project map with modal for details",
        "5": "Online PDF catalog viewer without requiring downloads",
        "6": "Product inquiry form and job application (CV submission) form",
        "7": "Blog and exhibition sections managed via a simple CMS",
        "8": "Responsive and modern admin panel for content management",
        "9": "Uses Embla Carousel for smooth and lightweight sliders"
      },
      "chalenges": {
        "chalenge1": "Displaying PDF files natively in the browser",
        "solution1": "Used a combination of react-pdf and pdfjs-dist for seamless rendering",
        "chalenge2": "Supporting 5 languages with dynamic routing",
        "solution2": "Implemented next-intl within the /[locale] route structure",
        "chalenge3": "Displaying projects on a map with detail modals in both the main site and admin panel",
        "solution3": "Used Leaflet and React Leaflet with dynamic markers. Project data was shown in modals and multilingual routing handled via next-intl"
      },
      "lessons": {
        "1": "Integrating SSR and i18n using Next.js App Router requires precise structure and planning",
        "2": "Gained experience in rendering interactive and professional PDFs within the browser",
        "3": "Built interactive project maps using React Leaflet which significantly improved UX for visual data",
        "4": "Designed a clean and intuitive admin panel tailored for non-technical users"
      }
    },
    "third": {
      "name": "Customize Your Perfect Tour",
      "summary": "This project is a customizable travel tour platform allowing users to browse, filter, and personalize travel packages according to their preferences.",
      "description": "This project is a modern, full-stack travel platform that allows users to discover a wide variety of travel tours and customize them based on destinations, dates, and preferences. Built using Next.js, MongoDB, Prisma, and modern UI libraries, this in-progress project offers both frontend and backend functionalities handled by me. It focuses on delivering a seamless, responsive experience for users and includes features like date pickers, internationalization, dynamic tour filtering, and admin panel capabilities.",
      "tools": "Next.js, MongoDB, Prisma, Tailwind, TypeScript, Motion",
      "goals": {
        "1": "Build a fully customizable travel tour platform",
        "2": "Allow users to filter and view tours based on location, time, and preferences",
        "3": "Implement user authentication and dashboard features",
        "4": "Enable admins to manage tour packages and user submissions",
        "5": "Create an internationalized and responsive interface for global users"
      },
      "features": {
        "1": "Advanced tour filtering and customization options",
        "2": "Dynamic date selection and user-friendly booking UI",
        "3": "Secure authentication and role-based dashboards",
        "4": "Admin panel for managing tour packages",
        "5": "Multilingual support and responsive design"
      },
      "chalenges": {
        "chalenge1": "Building a flexible data model for customizable tours",
        "solution1": "Used Prisma with a scalable MongoDB schema to handle dynamic tour configurations and options.",
        "chalenge2": "Managing internationalization across routes and dynamic content",
        "solution2": "Integrated next-intl to support multilingual routing and translations for both static and dynamic content.",
        "chalenge3": "Handling file uploads for tour images and media",
        "solution3": "Implemented AWS S3 for reliable image and media asset storage with secure access control.",
        "chalenge4": "Creating a scalable admin panel for tour management",
        "solution4": "Used Radix UI, React Query, and server-side features of Next.js to build a fast and interactive admin interface."
      },
      "lessons": {
        "1": "Designing modular and scalable full-stack applications",
        "2": "Working with Prisma and MongoDB for dynamic content",
        "3": "Building responsive, accessible UI using Radix and Tailwind",
        "4": "Managing image uploads and cloud storage with AWS S3",
        "5": "Implementing multilingual support with next-intl"
      }
    },
    "fourth": {
      "name": "Silicontech AI",
      "summary": "SiliconAI is a cross-platform AI-powered application that enables users to generate text and images using advanced models like GPT-4o and SiliconTech AI.",
      "description": "SiliconAI is an intelligent cross-platform application designed to provide users with powerful AI-driven text and image generation capabilities. Built with React Native for mobile and a web-based frontend, the app leverages advanced models such as GPT-4o, GPT-4o-mini, and SiliconTech AI to deliver creative content, answer questions, and generate high-quality images. Users can choose from different AI models and subscription plans based on their needs, making the experience flexible and accessible. The project’s goal was to create an easy-to-use, fast, and visually appealing AI assistant for both mobile and web platforms.",
      "tools": "React Native, TypeScript, Tailwind , Expo",
      "goals": {
        "1": "Provide an AI assistant for text generation (similar to ChatGPT)",
        "2": "Enable image generation from text prompts",
        "3": "Offer different subscription plans with access to multiple AI models",
        "4": "Deliver a smooth and user-friendly experience across mobile and web"
      },
      "features": {
        "1": "Chat-based AI text generation with multiple models (Silicontech-AI, GPT-4o, etc.)",
        "2": "AI-powered image generation from text",
        "3": "Multiple subscription plans to unlock different models and features",
        "4": "Clean, responsive, and intuitive UI/UX",
        "5": "Cross-platform availability: both web and mobile versions"
      },
      "chalenges": {
        "chalenge1": "Real-time Streaming of AI Responses in React Native",
        "solution1": "One of the key challenges was implementing real-time streaming of AI-generated responses word by word, allowing users to see responses progressively without waiting for the entire message. Since React Native with Expo doesn't natively support streaming, a custom solution was built using ReadableStream and getReader to read the data, TextDecoder to decode it, real-time UI updates, and smooth scrolling to the latest messages.",
        "chalenge2": "Managing Multiple AI Models and Subscription Tiers",
        "solution2": "Users needed access to different AI models (SiliconTech-AI, GPT-4o, GPT-4o-mini) based on their subscription plans. A modular system was designed to enable seamless switching between models while controlling feature access according to the user's subscription, without disrupting the user experience.",
        "chalenge3": "File Download and Sharing in a Native Environment",
        "solution3": "To handle AI-generated images and files, Expo's file-system and sharing modules were used for downloading, saving, and sharing content. Cross-platform compatibility and proper error handling were implemented to ensure a smooth and reliable experience.",
        "chalenge4": "Detecting Right-to-Left (RTL) and Left-to-Right (LTR) Languages",
        "solution4": "To correctly display messages in languages like Persian (RTL) or English (LTR), automatic language detection was implemented. Based on the detected direction, text alignment and writing direction were adjusted to maintain proper readability.",
        "chalenge5": "Rendering AI Responses with Markdown Support",
        "solution5": "To preserve rich text formatting in AI responses-including bold text, lists, and code snippets-the app used react-native-markdown-display with custom styling. Compatibility with both RTL and LTR languages was ensured for a polished presentation."
      },
      "lessons": {
        "1": "Working with various OpenAI models and integrating their APIs into mobile apps",
        "2": "Building scalable and modular front-end architecture with React Native & Expo",
        "3": "Enhancing UX for AI-powered applications on mobile",
        "4": "Managing file storage, downloads, and sharing within native apps"
      }
    },
    "fifth": {
      "name": "Liquid Glass UI library for React ",
      "summary": "A customizable React component library that adds animated frosted glass effects to your UI.",
      "description": "Liquid Glass is a modern UI component library that brings a sleek, frosted-glass effect to your React applications — with zero CSS setup. Featuring animated shine, smooth blur, and full responsiveness, it allows developers to quickly wrap any content in a stylish, glassmorphic container. Whether you're building dashboards, cards, or landing pages, this library makes it easy to add an elegant, high-end look with minimal effort. Lightweight, customizable, and compatible with React 18 and 19, it's perfect for projects that need a clean, modern aesthetic.",
      "tools": "React, TypeScript, Rollup, PostCSS",
      "goals": {
        "1": "Build a reusable UI component with a liquid glass effect",
        "2": "Make the component customizable, responsive, and developer-friendly",
        "3": "Publish it as a package for use in any React project"
      },
      "features": {
        "1": "A blurred, shimmering glass effect inspired by Apple’s iOS 26 — now available for React components, with zero CSS.",
        "2": "Lightweight and responsive",
        "3": "Supports content injection inside the glass container",
        "4": "Compatible with React 18+ and 19+"
      },
      "chalenges": {
        "chalenge1": "Dynamic blur rendering without CSS dependencies",
        "solution1": "Solved by using encapsulated style logic inside the component.",
        "chalenge2": "Ensuring cross-browser smooth animation",
        "solution2": "weaked shine layers using filter, backdrop-filter, and transform.",
        "chalenge3": "Packaging for NPM consumption with zero external dependencies",
        "solution3": "Used Rollup with ESM and CJS bundling, and peerDependencies for React/ReactDOM.",
        "chalenge4": "Usability in Tailwind and non-Tailwind projects",
        "solution4": "Allowed inline styling and class-based customization to support all use cases."
      },
      "lessons": {
        "1": "Best practices for building publishable component libraries",
        "2": "Optimizing visual effects using native CSS properties like backdrop-filter"
      },
      "installation": {
        "title": "Install the Library",
        "description": "To use the library in your project, simply install it using the following command:",
        "action": "For a better experience, try dragging the card to see the interactive liquid glass effect in action."
      }
    }
  },
  "notFound": {
    "title": "Page Not Found",
    "description": "The page you are looking for does not exist. Please check the URL or return to the homepage.",
    "buttonText": "Take Me Home"
  }
}
